version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "717279689524"
    AWS_REGION: "ap-south-1"
    ECR_REPO_FRONTEND: "frontend"
    ECR_REPO_BACKEND: "backend"
    ECR_REPO_WEBSOCKET: "websocket"
    IMAGE_TAG: "$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)"  # Use first 7 chars of Git commit SHA
    EKS_CLUSTER_NAME: "onedraw-cluster"  # Replace with your EKS cluster name
    KUBECONFIG: "/root/.kube/config"  # Path to kubeconfig file

phases:
  install:
    commands:
      - echo "Installing dependencies..."
      - yum update -y  # Use yum for AWS-provided images
      - yum install -y jq  # Install jq for JSON parsing
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"  # Install kubectl
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - aws --version  # Verify AWS CLI is installed
      - kubectl version --client  # Verify kubectl is installed

  pre_build:
    commands:
      - echo "Logging in to Docker Hub..."
      - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - echo "Logging in to Amazon ECR..."
      - echo "$CODEBUILD_WEBHOOK_EVENT"
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 579924771643.dkr.ecr.ap-south-1.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

  build:
    commands:
      - echo "Building Frontend Docker image..."
      - cd Frontend
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_FRONTEND:$IMAGE_TAG .
      - cd ..

      - echo "Building backend Docker image..."
      - cd backend
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_BACKEND:$IMAGE_TAG .
      - cd ..

      - echo "Building Websocket Docker image..."
      - cd WsServer
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_WEBSOCKET:$IMAGE_TAG .
      - cd ..

  post_build:
    commands:
      - echo "Pushing Frontend Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_FRONTEND:$IMAGE_TAG

      - echo "Pushing Backend Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_BACKEND:$IMAGE_TAG

      - echo "Pushing Websocket Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_WEBSOCKET:$IMAGE_TAG

      - echo "Build and push completed successfully!"

artifacts:
  files:
    - "**/*"  # Include all files for the next stage in the pipeline
  discard-paths: no
